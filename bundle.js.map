{"version":3,"sources":["webpack:///webpack/bootstrap 25e47b16e034fcdfed3f","webpack:///./src/index.ts","webpack:///./src/vector.ts","webpack:///./src/borderconfig.ts","webpack:///./src/PolygonConfig.ts","webpack:///./demo/src/index.ts","webpack:///./src/transmutation.ts","webpack:///./src/glyph.ts","webpack:///./src/stroke.ts","webpack:///./src/alphabet.ts","webpack:///./src/random.ts","webpack:///./src/config.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA,6CAAgD;AAMvC,wBANA,6BAAa,CAMA;AALtB,qCAAgC;AAKR,gBALf,aAAK,CAKe;AAJ7B,wCAAsC;AAIP,mBAJtB,mBAAQ,CAIsB;AAHvC,uCAAkC;AAGO,iBAHhC,eAAM,CAGgC;AAF/C,uCAAgD;AAEC,iBAFxC,eAAM,CAEwC;AAAE,uBAFxC,qBAAY,CAEwC;;;;;;;;;;ACHrE;;GAEG;AACH;IACE,gBAAoB,EAAU,EAAU,EAAU;QAA9B,OAAE,GAAF,EAAE,CAAQ;QAAU,OAAE,GAAF,EAAE,CAAQ;IAAG,CAAC;IAE/C,oBAAG,GAAV,UAAW,WAAmB;QAC5B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC;IAEM,yBAAQ,GAAf,UAAgB,WAAmB;QACjC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC;IAEM,kBAAC,GAAR;QACE,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAEM,kBAAC,GAAR;QACE,OAAO,IAAI,CAAC,EAAE,CAAC;IACjB,CAAC;IAED;;;OAGG;IACI,sBAAK,GAAZ,UAAa,MAAc;QACzB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;IACxD,CAAC;IAED;;;OAGG;IACI,qBAAI,GAAX,UAAY,UAAkB;QAC5B,OAAO,IAAI,CAAC,GAAG,CACb,IAAI,CAAC,IAAI,CACP,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CACvC,CACF,CAAC;IACJ,CAAC;IAEM,yBAAQ,GAAf,UAAgB,UAAU;QACxB,OAAO,IAAI,MAAM,CACf,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAC7B,CAAC,UAAU,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAC9B,CAAC;IACJ,CAAC;IAEM,uBAAM,GAAb;QACE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5C,CAAC;IAEM,0BAAS,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC;IAEa,aAAM,GAApB,UAAqB,IAAY;QAC/B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACxD,CAAC;IAEa,UAAG,GAAjB;QACE,OAAO,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEa,gBAAS,GAAvB,UAAwB,KAAa;QACnC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,CAAC;IACH,aAAC;AAAD,CAAC;AAvEQ,wBAAM;;;;;;;;;;ACGf,IAAK,UAGJ;AAHD,WAAK,UAAU;IACb,2CAAI;IACJ,2CAAI;AACN,CAAC,EAHI,UAAU,KAAV,UAAU,QAGd;AALsB,gCAAU;AAOjC;IACE,sBAAoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;IAAG,CAAC;IAElD,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,gCAAS,GAAT;QACE,OAAO,IAAI,CAAC,OAAO;aAChB,GAAG,CAAC,cAAI,IAAI,QAAC,IAAI,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAtC,CAAsC,CAAC;aACnD,MAAM,CAAC,UAAC,QAAa,EAAE,OAAY;YAClC,OAAO,QAAQ,GAAG,OAAO,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IACH,mBAAC;AAAD,CAAC;AArBQ,oCAAY;AAuBrB,4BAA4B,MAAc;IACxC,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAEzC,IAAI,OAAO,GAAG,IAAI,KAAK,EAAc,CAAC;IACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;QAChC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;KAC5E;IAED,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;AACnC,CAAC;AAhCkC,gDAAkB;;;;;;;;;;ACErD;IACE,uBACU,KAAa,EACb,OAAgB,EAChB,IAAa;QAFb,UAAK,GAAL,KAAK,CAAQ;QACb,YAAO,GAAP,OAAO,CAAS;QAChB,SAAI,GAAJ,IAAI,CAAS;IACpB,CAAC;IAEJ,6BAAK,GAAL;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,+BAAO,GAAP;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,4BAAI,GAAJ;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,iCAAS,GAAT;QACE,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3E,CAAC;IACH,oBAAC;AAAD,CAAC;AAxBQ,sCAAa;AA0BtB,6BAA6B,MAAc;IACzC,OAAO,IAAI,aAAa,CACtB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,EACtC,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,EACzB,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,CAC1B,CAAC;AACJ,CAAC;AAhCuB,kDAAmB;;;;;;;;;;;;;;;;ACF3C,mFAAmF;;AAEnF,mCAMmB;AACnB,4CAAkE;AAClE,6CAAwD;AAExD,IAAI,eAAe,GACjB;oDACkD,CAAC;AAErD,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,CAAC;AAElD,IAAI,MAAM,GAAG,IAAI,YAAM,CAAC,IAAI,CAAC,CAAC;AAE9B,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAsB,CAAC;AAE7E,IAAM,mBAAmB,GAAG,kBAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;AAElE,IAAM,aAAa,GAAG,IAAI,mBAAa,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;AAErE,IAAM,YAAY,GAAG;IACnB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;IAClC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;IACpC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC;IAC9E,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;AAC7C,CAAC,CAAC;AAEF,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;AAE3C,IAAM,CAAC,GAAG,UAAC,EAAU;IACnB,OAAO,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,MAAc,EAAE,QAAgB,EAAE,IAAY;IACxE,CAAC,CAAC,kBAAkB,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC3C,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;IACvB,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC;IAC/D,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,SAAS,EAAE,CAAC;IACrE,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,MAAM;SACzB,iBAAiB,EAAE;SACnB,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,EAAE,EAAb,CAAa,CAAC;SACvB,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,EAAL,CAAK,CAAC,CAAC;IAE3B,IAAI,MAAM,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QAC3C,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,KAAK,EAAE,CAAC;QACxE,CAAC,CACC,uBAAuB,CACxB,CAAC,OAAO,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,OAAO,EAAE,CAAC;QACrD,CAAC,CAAC,oBAAoB,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC,IAAI,EAAE,CAAC;KACzE;SAAM;QACL,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;KACpC;AACH,CAAC,CAAC;AAEF,kBAAkB,CAAC,mBAAmB,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;AAE/D,CAAC,CAAC,eAAe,CAAC,CAAC,OAAO,GAAG;IAC3B,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,CAAC;IACrD,IAAI,SAAS,GAAG,kBAAY,CAAC,eAAe,EAAE,IAAI,YAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACnE,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IACnC,kBAAkB,CAAC,SAAS,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;AAC1D,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG,UAAC,KAAa;IACrC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAc,CAAC;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC3B,GAAG,CAAC,IAAI,CAAC,yBAAU,CAAC,IAAI,CAAC,CAAC;SAC3B;aAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAClC,GAAG,CAAC,IAAI,CAAC,yBAAU,CAAC,IAAI,CAAC,CAAC;SAC3B;KACF;IACD,OAAO,IAAI,2BAAY,CAAC,GAAG,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,IAAM,iBAAiB,GAAG,UAAC,KAAa;IACtC,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACvD,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IAEpD,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;KACjB;SAAM,IAAI,KAAK,IAAI,CAAC,EAAE;KACtB;IACD,OAAO,IAAI,6BAAa,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACjD,CAAC,CAAC;AAEF,IAAM,kBAAkB,GAAG,UAAC,KAAa;IACvC,IAAI,MAAM,GAAG,IAAI,KAAK,EAAiB,CAAC;IACxC,IAAI,cAAc,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IAEzC,OAAO,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,CAAC;QAC/C,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;KAC3C;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,IAAM,mBAAmB,GAAG;IAC1B,IAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;IAC9B,eAAe,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;IAE9C,IAAI,WAAW,GAAG,gBAAgB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;IAE1E,IAAI,WAAW,GAAG,gBAAgB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;IAE1E,IAAI,QAAQ,GAAG,kBAAkB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;IAEvD,IAAI,YAAY,GAAG,IAAI,CAAC;IACxB,IAAI,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;QACtC,YAAY,GAAG,IAAI,6BAAa,CAC9B,CAAC,CAAC,qBAAqB,CAAC,CAAC,KAAK,EAC9B,CAAC,CAAC,uBAAuB,CAAC,CAAC,OAAO,EAClC,CAAC,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAChC,CAAC;KACH;IAED,IAAI,SAAS,GAAG,IAAI,YAAM,CACxB,IAAI,cAAQ,CAAC,IAAI,YAAM,CAAC,OAAO,CAAC,CAAC,EACjC,eAAe,EACf,WAAW,EACX,QAAQ,EACR,WAAW,EACX,YAAY,CACb,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACrC,CAAC,CAAC;AAEF,CAAC,CAAC,kBAAkB,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AACpD,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AACxC,CAAC,CAAC,cAAc,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AAChD,CAAC,CAAC,cAAc,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AAChD,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AAC5C,CAAC,CAAC,qBAAqB,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AACvD,CAAC,CAAC,uBAAuB,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;AACzD,CAAC,CAAC,oBAAoB,CAAC,CAAC,OAAO,GAAG,mBAAmB,CAAC;;;;;;;;;;AC7ItD,sCAAkC;AAClC,4CAA0D;AAK1D;IAaE,uBAAY,MAAyB,EAAE,MAAc;QACnD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,iCAAS,GAAT,UAAU,MAAc;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,kCAAU,GAAV,UACE,SAAiB,EACjB,WAAmB,EACnB,MAAqB,EACrB,QAAgB;QAEhB,IAAM,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAE/D,IAAI,CAAC,OAAO,CACV,WAAW,EACX,SAAS,EACT,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAClB,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CACvB,CAAC;QACF,IAAI,CAAC,OAAO,CACV,WAAW,EACX,SAAS,EACT,MAAM,CAAC,KAAK,EAAE,EACd,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CACvB,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAC1B,WAAW,EACX,SAAS,EACT,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAClB,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,wBAAwB;SAC7E,CAAC;QAEF,IAAI,MAAM,CAAC,IAAI,EAAE,EAAE;YACjB,IAAI,CAAC,gBAAgB,CACnB,WAAW,EACX,SAAS,EACT,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAClB,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EACnD,SAAS,GAAG,CAAC,CACd,CAAC;YAEF,IAAI,CAAC,gBAAgB,CACnB,WAAW,EACX,SAAS,EACT,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,EAClB,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EACnD,SAAS,GAAG,GAAG,CAChB,CAAC;SACH;QAED,IAAM,oBAAoB,GAAG,SAAS,GAAG,CAAC,CAAC;QAE3C,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;YACpB,IAAI,CAAC,mBAAmB,CACtB,WAAW,EACX,OAAO,EACP,MAAM,CAAC,KAAK,EAAE,EACd,QAAQ,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EACnD,oBAAoB,CACrB,CAAC;SACH;QAED,OAAO,CAAC,OAAO,GAAG,oBAAoB,CAAC,GAAG,GAAG,CAAC;IAChD,CAAC;IAED,kCAAU,GAAV,UACE,SAAiB,EACjB,WAAmB,EACnB,MAAoB,EACpB,QAAgB;QAJlB,iBA8BC;QAxBC,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,MAAM,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAC,IAAgB;YAC/C,QAAQ,IAAI,EAAE;gBACZ,KAAK,yBAAU,CAAC,IAAI;oBAClB,KAAI,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,GAAG,eAAe,CAAC,CAAC;oBACtD,MAAM;gBAER,KAAK,yBAAU,CAAC,IAAI;oBAClB,KAAI,CAAC,UAAU,CACb,WAAW,EACX,SAAS,GAAG,eAAe,EAC3B,CAAC,SAAS,GAAG,eAAe,CAAC,GAAG,EAAE,EAClC,QAAQ,GAAG,SAAS,CACrB,CAAC;oBACF,SAAS,IAAI,CAAC,CAAC,CAAC;oBAEhB,MAAM;aACT;YAED,eAAe,IAAI,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,GAAG,eAAe,CAAC;IACrC,CAAC;IAEM,4BAAI,GAAX,UAAY,KAAa,EAAE,MAAc,EAAE,QAAgB;QAA3D,iBAmDC;QAlDC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,IAAM,WAAW,GAAG,IAAI,eAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QACtD,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAC7B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,EAC9B,WAAW,EACX,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAC7B,QAAQ,GAAG,SAAS,CACrB,CAAC;QAEF,SAAS;YACP,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,oBAAU;YAChD,SAAS,GAAG,KAAI,CAAC,UAAU,CACzB,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,GAAG,SAAS,CACrB,CAAC;YACF,SAAS,IAAI,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEhB,SAAS,GAAG,IAAI,CAAC,UAAU,CACzB,SAAS,EACT,WAAW,EACX,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,EACnC,QAAQ,GAAG,SAAS,CACrB,CAAC;QAEF,SAAS;YACP,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;gBACnE,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,CAAC,CAAC,CAAC;QAET,IAAI,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,IAAI,EAAE;YAC/C,IAAI,CAAC,UAAU,CACb,SAAS,EACT,WAAW,EACX,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,EACnC,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC,CAC1B,CAAC;SACH;IACH,CAAC;IAED,6BAAK,GAAL;QACE,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC3D,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,+BAAO,GAAP,UAAQ,GAAW,EAAE,MAAc,EAAE,KAAa,EAAE,QAAgB;QAClE,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACrB,IAAM,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;QAE7C,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,MAAM,EAAE,EAAE;YAC7C,IAAI,CAAC,GAAG,CAAC,MAAM,CACb,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC,EAC/D,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC,CAChE,CAAC;SACH;QAED,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAErB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,2CAAmB,GAAnB,UACE,GAAW,EACX,MAAc,EACd,KAAa,EACb,QAAgB,EAChB,YAAoB;QAEpB,IAAM,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;QAE7C,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,MAAM,EAAE,EAAE;YAC7C,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;YACrC,IAAM,KAAK,GAAG,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC;YACjD,IAAM,WAAW,GAAG,eAAM,CAAC,SAAS,CAAC,KAAK,CAAC;iBACxC,KAAK,CAAC,MAAM,CAAC;iBACb,GAAG,CAAC,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CACV,WAAW,CAAC,CAAC,EAAE,EACf,WAAW,CAAC,CAAC,EAAE,EACf,YAAY,EACZ,CAAC,EACD,IAAI,CAAC,EAAE,GAAG,CAAC,CACZ,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;SACtD;IACH,CAAC;IAED,+CAAuB,GAAvB,UACE,GAAW,EACX,MAAc,EACd,KAAa,EACb,QAAgB;QAEhB,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QAEjC,IAAM,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;QAE7C,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE,MAAM,EAAE,EAAE;YAC7C,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;YAErB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAClC,IAAI,CAAC,GAAG,CAAC,MAAM,CACb,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC,EAC/D,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC,CAChE,CAAC;YAEF,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACnB;IACH,CAAC;IAED,kCAAU,GAAV,UAAW,GAAW,EAAE,IAAY,EAAE,KAAa;QACjD,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM;aAClB,WAAW,EAAE;aACb,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAE7D,IAAI,CAAC,KAAK,IAAI,EAAE;YACd,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,eAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,WAAW;YACd,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC;IAC9D,CAAC;IAED,qCAAa,GAAb,UAAc,GAAW,EAAE,IAAY,EAAE,KAAa;QACpD,+BAA+B;QAC/B,cAAc;QACd,SAAS;QACT,8BAA8B;QAC9B,WAAW;QACX,cAAc;QACd,KAAK;IACP,CAAC;IAED,kCAAU,GAAV,UAAW,GAAW,EAAE,MAAc,EAAE,QAAgB,EAAE,QAAgB;QACxE,IAAM,OAAO,GAAG,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QACxC,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC;QAEtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;YAChC,IAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC;YACtC,IAAI,CAAC,UAAU,CACb,GAAG,CAAC,GAAG,CAAC,eAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EACjD,QAAQ,EACR,QAAQ,CACT,CAAC;SACH;IACH,CAAC;IAED,8BAAM,GAAN,UAAO,GAAW,EAAE,MAAc;QAChC,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,qCAAa,GAAb,UAAc,OAAe,EAAE,MAAc,EAAE,KAAa;QAC1D,IAAM,OAAO,GAAG,MAAM;aACnB,KAAK,CAAC,CAAC,CAAC;aACR,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC5B,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAE9B,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAED,wCAAgB,GAAhB,UACE,GAAW,EACX,MAAc,EACd,KAAa,EACb,QAAgB,EAChB,SAAiB;QAEjB,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QAErC,IAAM,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;QAE7C,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,KAAK,EAAE,MAAM,IAAI,CAAC,EAAE;YACjD,IAAM,QAAQ,GAAG,IAAI,eAAM,CACzB,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EACrE,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CACtE,CAAC;YAEF,IAAM,QAAQ,GAAG,IAAI,eAAM,CACzB,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EACrE,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CACtE,CAAC;YAEF,IAAM,UAAU,GAAG,IAAI,eAAM,CAC3B,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC,EAC/D,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC,CAChE,CAAC;YAEF,IAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAC9B,QAAQ;iBACL,QAAQ,CAAC,QAAQ,CAAC;iBAClB,MAAM,EAAE;iBACR,KAAK,CAAC,SAAS,CAAC,CACpB,CAAC;YACF,IAAM,WAAW,GAAG,QAAQ,CAAC,GAAG,CAC9B,UAAU;iBACP,QAAQ,CAAC,QAAQ,CAAC;iBAClB,MAAM,EAAE;iBACR,KAAK,CAAC,SAAS,CAAC,CACpB,CAAC;YACF,IAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CACnC,GAAG;iBACA,QAAQ,CAAC,QAAQ,CAAC;iBAClB,MAAM,EAAE;iBACR,KAAK,CAAC,SAAS,CAAC,CACpB,CAAC;YAEF,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC;SAChE;IACH,CAAC;IACH,oBAAC;AAAD,CAAC;AApWQ,sCAAa;;;;;;;;;;ACJtB,sCAAkC;AAElC,sCAAkC;AAIlC;;;GAGG;AACH;IAGE,eAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,GAAG;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClD,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,EAAE;IACrD,CAAC;IAEO,4BAAY,GAApB,UAAqB,OAAsB;QACzC,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEO,+BAAe,GAAvB,UAAwB,MAAc;QAAtC,iBAkEC;QAjEC,IAAM,WAAW,GAAG;YAClB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SACtB,CAAC;QAEF,qBAAqB;QACrB,IAAI,YAAY,GAAG,IAAI,KAAK,EAAU,CAAC;QACvC,WAAW,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,QAAQ;YAChC,GAAG,CAAC,OAAO,CAAC,UAAC,KAAK,EAAE,UAAU;gBAC5B,IAAI,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,KAAK,EAAE;oBACnC,YAAY,CAAC,IAAI,CACf,IAAI,eAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,GAAG,CAClC,eAAM,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CACtC,CACF,CAAC;iBACH;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,gBAAgB;QAChB,IAAI,WAAW,GAAG,IAAI,KAAK,EAAU,CAAC;QACtC,IAAI,OAAO,GAAG,IAAI,KAAK,EAAU,CAAC;QAClC,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;YACvE,KACE,IAAI,gBAAgB,GAAG,UAAU,GAAG,CAAC,EACrC,gBAAgB,GAAG,YAAY,CAAC,MAAM,EACtC,gBAAgB,EAAE,EAClB;gBACA,IAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,CACxC,YAAY,CAAC,gBAAgB,CAAC,CAC/B,CAAC;gBACF,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,IAAI,GAAG,GAAG,EAAE;oBACtD,OAAO,CAAC,IAAI,CACV,IAAI,eAAM,CACR,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EACnC,YAAY,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAC1C,CACF,CAAC;oBACF,IAAI,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;wBACzC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBAC9B;oBACD,IAAI,WAAW,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE;wBAC/C,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;qBACpC;iBACF;aACF;SACF;QAED,KAAK,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;YACvE,IACE,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACtC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,GAAG,EAC7B;gBACA,OAAO,CAAC,IAAI,CACV,IAAI,eAAM,CACR,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EACnC,YAAY,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CACrC,CACF,CAAC;gBACF,MAAM;aACP;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,oBAAI,GAAJ,UACE,GAA6B,EAC7B,MAAc,EACd,UAAkB,EAClB,QAAgB,EAChB,WAAmB;QAEnB,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;YACzB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IACH,YAAC;AAAD,CAAC;AAnGQ,sBAAK;;;;;;;;;;ACJd,sCAAkC;AAIlC;;;GAGG;AACH;IACE,gBAAoB,KAAa,EAAU,GAAW;QAAlC,UAAK,GAAL,KAAK,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAQ;IAAG,CAAC;IAEnD,qBAAI,GAAX,UACE,GAA6B,EAC7B,MAAc,EACd,UAAkB,EAClB,QAAgB;QAEhB,IAAM,OAAO,GAAG,eAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAExD,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnD,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QAE5E,IAAI,WAAW,GAAG,IAAI,eAAM,CAC1B,aAAa,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,kBAAkB,CAAC,EACnE,aAAa,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,kBAAkB,CAAC,CACpE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEf,WAAW,GAAG,IAAI,eAAM,CACtB,WAAW,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,EAAE,EAChC,WAAW,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,EAAE,CACjC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEhB,IAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;QAEtE,IAAI,SAAS,GAAG,IAAI,eAAM,CACxB,WAAW,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,gBAAgB,CAAC,EAC/D,WAAW,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAChE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEf,SAAS,GAAG,IAAI,eAAM,CACpB,SAAS,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,EAAE,EAC9B,SAAS,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC,CAAC,EAAE,CAC/B,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEhB,6BAA6B;QAC7B,8CAA8C;QAC9C,GAAG,CAAC,SAAS,EAAE,CAAC;QAEhB,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7C,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,SAAS,EAAE,CAAC;QAEhB,GAAG,CAAC,MAAM,EAAE,CAAC;QACb,uBAAuB;IACzB,CAAC;IACH,aAAC;AAAD,CAAC;AAvDQ,wBAAM;;;;;;;;;;ACCf,gCAA0B;AAE1B,IAAM,yBAAyB,GAAG,EAAE,CAAC;AAErC;IAGE,kBAAY,MAAc;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,KACE,IAAI,aAAa,GAAG,CAAC,EACrB,aAAa,GAAG,yBAAyB,EACzC,aAAa,EAAE,EACf;YACA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,QAAK,CAAC,MAAM,CAAC,CAAC;SAC1E;IACH,CAAC;IAED;;OAEG;IACI,wBAAK,GAAZ,UAAa,MAAc;QACzB,IAAI,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;YACvC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;SAC1C;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACH,eAAC;AAAD,CAAC;AA9BQ,4BAAQ;;;;;;;;;;ACEjB;IAGE,gBAAY,IAAY;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC;QAE9B,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;YAClB,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC;SACzB;IACH,CAAC;IAED,qBAAI,GAAJ;QACE,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC,CAAC;IACxD,CAAC;IAED,0BAAS,GAAT;QACE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,UAAU,CAAC;IACxC,CAAC;IACH,aAAC;AAAD,CAAC;AApBQ,wBAAM;;;;;;;;;;ACAf,4CAAkE;AAElE,gCAA6B;AAC7B,6CAAqE;AAIrE;IACE,gBACU,QAAkB,EAClB,QAAgB,EAChB,YAA0B,EAC1B,aAAmC,EACnC,kBAAgC,EAChC,kBAAiC;QALjC,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAsB;QACnC,uBAAkB,GAAlB,kBAAkB,CAAc;QAChC,uBAAkB,GAAlB,kBAAkB,CAAe;IACxC,CAAC;IAEJ,4BAAW,GAAX;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,gCAAe,GAAf;QACE,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,sCAAqB,GAArB;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,4BAAW,GAAX;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,kCAAiB,GAAjB;QACE,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,sCAAqB,GAArB;QACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IACH,aAAC;AAAD,CAAC;AAnCQ,wBAAM;AAqCf,sBAAsB,QAAgB,EAAE,MAAc;IACpD,IAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;IACxD,IAAI,KAAK,GAAG,IAAI,KAAK,CAAgB,QAAQ,CAAC,CAAC;IAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;QACjC,KAAK,CAAC,CAAC,CAAC,GAAG,mCAAmB,CAAC,MAAM,CAAC,CAAC;KACxC;IAED,OAAO,IAAI,MAAM,CACf,IAAI,WAAQ,CAAC,MAAM,CAAC,EACpB,QAAQ,EACR,iCAAkB,CAAC,MAAM,CAAC,EAC1B,KAAK,EACL,iCAAkB,CAAC,MAAM,CAAC,EAC1B,MAAM,CAAC,SAAS,EAAE,GAAG,GAAG;QACtB,CAAC,CAAC,IAAI;QACN,CAAC,CAAC,IAAI,6BAAa,CACf,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,EACtC,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,EACzB,MAAM,CAAC,SAAS,EAAE,IAAI,GAAG,CAC1B,CACN,CAAC;AACJ,CAAC;AA1DgB,oCAAY","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 25e47b16e034fcdfed3f","import { Transmutation } from \"./transmutation\";\r\nimport { Glyph } from \"./glyph\";\r\nimport { Alphabet } from \"./alphabet\";\r\nimport { Random } from \"./random\";\r\nimport { Config, RandomConfig } from \"./config\";\r\n\r\nexport { Transmutation, Glyph, Alphabet, Random, Config, RandomConfig };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import { Random } from \"./random\";\r\nexport { Vector };\r\n\r\n/**\r\n * Immutable\r\n */\r\nclass Vector {\r\n  constructor(private _x: number, private _y: number) {}\r\n\r\n  public add(otherVector: Vector): Vector {\r\n    return new Vector(this._x + otherVector._x, this._y + otherVector._y);\r\n  }\r\n\r\n  public subtract(otherVector: Vector): Vector {\r\n    return new Vector(this._x - otherVector._x, this._y - otherVector._y);\r\n  }\r\n\r\n  public x() {\r\n    return this._x;\r\n  }\r\n\r\n  public y() {\r\n    return this._y;\r\n  }\r\n\r\n  /**\r\n   * Scale the vector's coordinates by some amount\r\n   * @param amount what we want to multiply the vector by\r\n   */\r\n  public scale(amount: number): Vector {\r\n    return new Vector(this._x * amount, this._y * amount);\r\n  }\r\n\r\n  /**\r\n   * Determines how far two points are from one another.\r\n   * @param otherPoint The point we're going to see how far away we're from\r\n   */\r\n  public dist(otherPoint: Vector): number {\r\n    return Math.abs(\r\n      Math.sqrt(\r\n        Math.pow(otherPoint._x - this._x, 2) +\r\n          Math.pow(otherPoint._y - this._y, 2)\r\n      )\r\n    );\r\n  }\r\n\r\n  public midpoint(otherPoint): Vector {\r\n    return new Vector(\r\n      (otherPoint._x + this._x) / 2,\r\n      (otherPoint._y + this._y) / 2\r\n    );\r\n  }\r\n\r\n  public normal(): Vector {\r\n    return this.scale(1.0 / this.magnitude());\r\n  }\r\n\r\n  public magnitude(): number {\r\n    return Math.sqrt(Math.pow(this._x, 2) + Math.pow(this._y, 2));\r\n  }\r\n\r\n  public static random(seed: Random): Vector {\r\n    return new Vector(seed.nextFloat(), seed.nextFloat());\r\n  }\r\n\r\n  public static one(): Vector {\r\n    return new Vector(1.0, 1.0);\r\n  }\r\n\r\n  public static fromAngle(angle: number): Vector {\r\n    return new Vector(Math.cos(angle), Math.sin(angle));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/vector.ts","import { Random } from \"./random\";\r\n\r\nexport { BorderConfig, BorderType, RandomBorderConfig };\r\n\r\nenum BorderType {\r\n  Line,\r\n  Text\r\n}\r\n\r\nclass BorderConfig {\r\n  constructor(private borders: Array<BorderType>) {}\r\n\r\n  GetBorderTypes(): Array<BorderType> {\r\n    return this.borders;\r\n  }\r\n\r\n  Shorthand(): string {\r\n    return this.borders\r\n      .map(type => (type === BorderType.Line ? \"L\" : \"T\"))\r\n      .reduce((previous: any, current: any) => {\r\n        return previous + current;\r\n      });\r\n  }\r\n}\r\n\r\nfunction RandomBorderConfig(random: Random): BorderConfig {\r\n  let circles = random.nextFloat() * 3 + 2;\r\n\r\n  let borders = new Array<BorderType>();\r\n  for (let c = 0; c < circles; c++) {\r\n    borders[c] = random.nextFloat() >= 0.5 ? BorderType.Text : BorderType.Line;\r\n  }\r\n\r\n  return new BorderConfig(borders);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/borderconfig.ts","import { Random } from \"./random\";\r\n\r\nexport { PolygonConfig, RandomPolygonConfig };\r\n\r\nclass PolygonConfig {\r\n  constructor(\r\n    private sides: number,\r\n    private circles: boolean,\r\n    private arcs: boolean\r\n  ) {}\r\n\r\n  Sides(): number {\r\n    return this.sides;\r\n  }\r\n\r\n  Circles(): boolean {\r\n    return this.circles;\r\n  }\r\n\r\n  Arcs(): boolean {\r\n    return this.arcs;\r\n  }\r\n\r\n  Shorthand(): string {\r\n    return this.sides + (this.circles ? \"T\" : \"F\") + (this.arcs ? \"T\" : \"F\");\r\n  }\r\n}\r\n\r\nfunction RandomPolygonConfig(random: Random): PolygonConfig {\r\n  return new PolygonConfig(\r\n    3 + Math.round(random.nextFloat() * 5),\r\n    random.nextFloat() >= 0.5,\r\n    random.nextFloat() >= 0.5\r\n  );\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/PolygonConfig.ts","// https://www.deviantart.com/notshurly/art/Transmutation-Circle-Tutorial-158371530\r\n\r\nimport {\r\n  Transmutation,\r\n  Random,\r\n  RandomConfig,\r\n  Config,\r\n  Alphabet\r\n} from \"../../src\";\r\nimport { BorderType, BorderConfig } from \"../../src/borderconfig\";\r\nimport { PolygonConfig } from \"../../src/PolygonConfig\";\r\n\r\nlet sentenceToWrite =\r\n  \"My first name is a random set of numbers and letters \\\r\nAnd other alphanumerics that changes hourly forever\";\r\n\r\nlet seed = Math.round(Math.random() * 2147483647);\r\n\r\nlet random = new Random(seed);\r\n\r\nconst canvas = document.getElementById(\"Transmutation\") as HTMLCanvasElement;\r\n\r\nconst transmutationConfig = RandomConfig(sentenceToWrite, random);\r\n\r\nconst transmutation = new Transmutation(canvas, transmutationConfig);\r\n\r\nconst resizeWindow = () => {\r\n  canvas.width = canvas.clientWidth;\r\n  canvas.height = canvas.clientHeight;\r\n  transmutation.Draw(canvas.width, canvas.height, new Date().getTime() / 10000);\r\n  window.requestAnimationFrame(resizeWindow);\r\n};\r\n\r\nwindow.requestAnimationFrame(resizeWindow);\r\n\r\nconst $ = (id: string): any => {\r\n  return document.getElementById(id);\r\n};\r\n\r\nconst SetWindowVariables = (config: Config, sentence: string, seed: number) => {\r\n  $(\"text-to-inscribe\").innerText = sentence;\r\n  $(\"seed\").value = seed;\r\n  $(\"outer-border\").value = config.GetBorderConfig().Shorthand();\r\n  $(\"inner-border\").value = config.GetInnerBoarderConfig().Shorthand();\r\n  $(\"polygons\").value = config\r\n    .GetPolygonConfigs()\r\n    .map(x => x.Shorthand())\r\n    .reduce((p, c) => p + c);\r\n\r\n  if (config.GetInnerPolygonConfig() !== null) {\r\n    $(\"inner-polygon-sides\").value = config.GetInnerPolygonConfig().Sides();\r\n    $(\r\n      \"inner-polygon-circles\"\r\n    ).checked = config.GetInnerPolygonConfig().Circles();\r\n    $(\"inner-polygon-arcs\").checked = config.GetInnerPolygonConfig().Arcs();\r\n  } else {\r\n    $(\"inner-polygon-sides\").value = 0;\r\n  }\r\n};\r\n\r\nSetWindowVariables(transmutationConfig, sentenceToWrite, seed);\r\n\r\n$(\"random-circle\").onclick = () => {\r\n  let newSeed = Math.round(Math.random() * 2147483647);\r\n  let newConfig = RandomConfig(sentenceToWrite, new Random(newSeed));\r\n  transmutation.SetConfig(newConfig);\r\n  SetWindowVariables(newConfig, sentenceToWrite, newSeed);\r\n};\r\n\r\nconst borderFromString = (input: string): BorderConfig => {\r\n  let out = new Array<BorderType>();\r\n  for (var i = 0; i < input.length; i++) {\r\n    if (input.charAt(i) === \"L\") {\r\n      out.push(BorderType.Line);\r\n    } else if (input.charAt(i) === \"T\") {\r\n      out.push(BorderType.Text);\r\n    }\r\n  }\r\n  return new BorderConfig(out);\r\n};\r\n\r\nconst polygonFromString = (input: string): PolygonConfig => {\r\n  const sides = parseInt(input.charAt(0));\r\n  const circles = input.charAt(1) === \"T\" ? true : false;\r\n  const arcs = input.charAt(2) === \"T\" ? true : false;\r\n\r\n  if (isNaN(sides)) {\r\n  } else if (sides <= 2) {\r\n  }\r\n  return new PolygonConfig(sides, circles, arcs);\r\n};\r\n\r\nconst polygonsFromString = (input: string): Array<PolygonConfig> => {\r\n  let output = new Array<PolygonConfig>();\r\n  let remainingInput = input.toUpperCase();\r\n\r\n  while (remainingInput.length >= 3) {\r\n    output.push(polygonFromString(remainingInput));\r\n    remainingInput = remainingInput.substr(3);\r\n  }\r\n\r\n  return output;\r\n};\r\n\r\nconst buildCircleFromForm = () => {\r\n  let newSeed = $(\"seed\").value;\r\n  sentenceToWrite = $(\"text-to-inscribe\").value;\r\n\r\n  let outerBorder = borderFromString($(\"outer-border\").value.toUpperCase());\r\n\r\n  let innerBorder = borderFromString($(\"inner-border\").value.toUpperCase());\r\n\r\n  let polygons = polygonsFromString($(\"polygons\").value);\r\n\r\n  let innerPolygon = null;\r\n  if ($(\"inner-polygon-sides\").value > 2) {\r\n    innerPolygon = new PolygonConfig(\r\n      $(\"inner-polygon-sides\").value,\r\n      $(\"inner-polygon-circles\").checked,\r\n      $(\"inner-polygon-arcs\").checked\r\n    );\r\n  }\r\n\r\n  let newConfig = new Config(\r\n    new Alphabet(new Random(newSeed)),\r\n    sentenceToWrite,\r\n    outerBorder,\r\n    polygons,\r\n    innerBorder,\r\n    innerPolygon\r\n  );\r\n  transmutation.SetConfig(newConfig);\r\n};\r\n\r\n$(\"text-to-inscribe\").oninput = buildCircleFromForm;\r\n$(\"seed\").oninput = buildCircleFromForm;\r\n$(\"inner-border\").oninput = buildCircleFromForm;\r\n$(\"outer-border\").oninput = buildCircleFromForm;\r\n$(\"polygons\").oninput = buildCircleFromForm;\r\n$(\"inner-polygon-sides\").oninput = buildCircleFromForm;\r\n$(\"inner-polygon-circles\").oninput = buildCircleFromForm;\r\n$(\"inner-polygon-arcs\").oninput = buildCircleFromForm;\r\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/index.ts","import { Vector } from \"./vector\";\r\nimport { BorderConfig, BorderType } from \"./borderconfig\";\r\nimport { Config } from \"./config\";\r\nimport { PolygonConfig } from \"./PolygonConfig\";\r\nexport { Transmutation };\r\n\r\nclass Transmutation {\r\n  ctx: CanvasRenderingContext2D;\r\n\r\n  canvas: HTMLCanvasElement;\r\n\r\n  background: string;\r\n\r\n  line: string;\r\n\r\n  characterOn: number;\r\n\r\n  config: Config;\r\n\r\n  constructor(canvas: HTMLCanvasElement, config: Config) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n    this.background = \"black\";\r\n    this.line = \"red\";\r\n    this.characterOn = 0;\r\n    this.config = config;\r\n  }\r\n\r\n  SetConfig(config: Config) {\r\n    this.config = config;\r\n  }\r\n\r\n  DrawMiddle(\r\n    maxRadius: number,\r\n    middleCords: Vector,\r\n    config: PolygonConfig,\r\n    rotation: number\r\n  ): number {\r\n    const apothem = maxRadius * Math.cos(Math.PI / config.Sides());\r\n\r\n    this.Polygon(\r\n      middleCords,\r\n      maxRadius,\r\n      config.Sides() * 2,\r\n      rotation + Math.PI / 2\r\n    );\r\n    this.Polygon(\r\n      middleCords,\r\n      maxRadius,\r\n      config.Sides(),\r\n      rotation + Math.PI / 2\r\n    );\r\n\r\n    this.PolyVertexIntersections(\r\n      middleCords,\r\n      maxRadius,\r\n      config.Sides() * 2,\r\n      rotation + (Math.PI / 2 + Math.PI / config.Sides()) // One thing to scramble\r\n    );\r\n\r\n    if (config.Arcs()) {\r\n      this.PolyMidpointArcs(\r\n        middleCords,\r\n        maxRadius,\r\n        config.Sides() * 2,\r\n        rotation + (Math.PI / 2 + Math.PI / config.Sides()),\r\n        maxRadius / 3\r\n      );\r\n\r\n      this.PolyMidpointArcs(\r\n        middleCords,\r\n        maxRadius,\r\n        config.Sides() * 2,\r\n        rotation + (Math.PI / 2 + Math.PI / config.Sides()),\r\n        maxRadius / 3.5\r\n      );\r\n    }\r\n\r\n    const midpointCircleRadius = maxRadius / 8;\r\n\r\n    if (config.Circles()) {\r\n      this.PolyMidpointCircles(\r\n        middleCords,\r\n        apothem,\r\n        config.Sides(),\r\n        rotation + (Math.PI / 2 + Math.PI / config.Sides()),\r\n        midpointCircleRadius\r\n      );\r\n    }\r\n\r\n    return (apothem - midpointCircleRadius) * 0.9;\r\n  }\r\n\r\n  DrawBorder(\r\n    maxRadius: number,\r\n    middleCords: Vector,\r\n    border: BorderConfig,\r\n    rotation: number\r\n  ): number {\r\n    let remainingRadius = 1;\r\n    let direction = 1;\r\n    border.GetBorderTypes().forEach((type: BorderType) => {\r\n      switch (type) {\r\n        case BorderType.Line:\r\n          this.Circle(middleCords, maxRadius * remainingRadius);\r\n          break;\r\n\r\n        case BorderType.Text:\r\n          this.CircleText(\r\n            middleCords,\r\n            maxRadius * remainingRadius,\r\n            (maxRadius * remainingRadius) / 20,\r\n            rotation * direction\r\n          );\r\n          direction *= -1;\r\n\r\n          break;\r\n      }\r\n\r\n      remainingRadius -= 0.05;\r\n    });\r\n\r\n    return maxRadius * remainingRadius;\r\n  }\r\n\r\n  public Draw(width: number, height: number, rotation: number): void {\r\n    this.characterOn = 0;\r\n    this.Start();\r\n\r\n    let direction = 1;\r\n\r\n    const middleCords = new Vector(width / 2, height / 2);\r\n    let maxRadius = this.DrawBorder(\r\n      Math.min(width, height) * 0.48,\r\n      middleCords,\r\n      this.config.GetBorderConfig(),\r\n      rotation * direction\r\n    );\r\n\r\n    direction *=\r\n      this.config.GetBorderConfig().GetBorderTypes().length % 2 === 0 ? 1 : -1;\r\n\r\n    this.config.GetPolygonConfigs().forEach(polyConfig => {\r\n      maxRadius = this.DrawMiddle(\r\n        maxRadius,\r\n        middleCords,\r\n        polyConfig,\r\n        rotation * direction\r\n      );\r\n      direction *= -1;\r\n    });\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(middleCords.x(), middleCords.y(), maxRadius, 0, 2 * Math.PI);\r\n    this.ctx.fill();\r\n\r\n    maxRadius = this.DrawBorder(\r\n      maxRadius,\r\n      middleCords,\r\n      this.config.GetInnerBoarderConfig(),\r\n      rotation * direction\r\n    );\r\n\r\n    direction *=\r\n      this.config.GetInnerBoarderConfig().GetBorderTypes().length % 2 === 0\r\n        ? 1\r\n        : -1;\r\n\r\n    if (this.config.GetInnerPolygonConfig() != null) {\r\n      this.DrawMiddle(\r\n        maxRadius,\r\n        middleCords,\r\n        this.config.GetInnerPolygonConfig(),\r\n        rotation * direction * -1\r\n      );\r\n    }\r\n  }\r\n\r\n  Start(): void {\r\n    this.ctx.fillStyle = this.background;\r\n    this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.fill();\r\n  }\r\n\r\n  Polygon(pos: Vector, radius: number, sides: number, rotation: number): void {\r\n    this.ctx.strokeStyle = this.line;\r\n    this.ctx.beginPath();\r\n    const angleIncrement = (Math.PI * 2) / sides;\r\n\r\n    for (let vertex = 0; vertex < sides; vertex++) {\r\n      this.ctx.lineTo(\r\n        pos.x() + radius * Math.cos(rotation + angleIncrement * vertex),\r\n        pos.y() + radius * Math.sin(rotation + angleIncrement * vertex)\r\n      );\r\n    }\r\n\r\n    this.ctx.closePath();\r\n\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  PolyMidpointCircles(\r\n    pos: Vector,\r\n    radius: number,\r\n    sides: number,\r\n    rotation: number,\r\n    circleRadius: number\r\n  ) {\r\n    const angleIncrement = (Math.PI * 2) / sides;\r\n\r\n    for (let vertex = 0; vertex < sides; vertex++) {\r\n      this.ctx.strokeStyle = this.line;\r\n      this.ctx.fillStyle = this.background;\r\n      const angle = rotation + angleIncrement * vertex;\r\n      const adjustedPos = Vector.fromAngle(angle)\r\n        .scale(radius)\r\n        .add(pos);\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(\r\n        adjustedPos.x(),\r\n        adjustedPos.y(),\r\n        circleRadius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      this.ctx.fill();\r\n      this.ctx.stroke();\r\n      this.SpecialSymbol(adjustedPos, circleRadius, angle);\r\n    }\r\n  }\r\n\r\n  PolyVertexIntersections(\r\n    pos: Vector,\r\n    radius: number,\r\n    sides: number,\r\n    rotation: number\r\n  ) {\r\n    this.ctx.strokeStyle = this.line;\r\n\r\n    const angleIncrement = (Math.PI * 2) / sides;\r\n\r\n    for (let vertex = 0; vertex < sides; vertex++) {\r\n      this.ctx.beginPath();\r\n\r\n      this.ctx.moveTo(pos.x(), pos.y());\r\n      this.ctx.lineTo(\r\n        pos.x() + radius * Math.cos(rotation + angleIncrement * vertex),\r\n        pos.y() + radius * Math.sin(rotation + angleIncrement * vertex)\r\n      );\r\n\r\n      this.ctx.stroke();\r\n    }\r\n  }\r\n\r\n  NextSymbol(pos: Vector, size: number, angle: number): void {\r\n    const g = this.config\r\n      .GetAlphabet()\r\n      .Glyph(this.config.GetSentence().charAt(this.characterOn));\r\n\r\n    if (g !== null) {\r\n      g.Draw(this.ctx, pos, Vector.one().scale(size), angle, this.line);\r\n    }\r\n\r\n    this.characterOn =\r\n      (this.characterOn + 1) % this.config.GetSentence().length;\r\n  }\r\n\r\n  SpecialSymbol(pos: Vector, size: number, angle: number): void {\r\n    // new Glyph(this.random).Draw(\r\n    //   this.ctx,\r\n    //   pos,\r\n    //   Vector.one().scale(size),\r\n    //   angle,\r\n    //   this.line\r\n    // );\r\n  }\r\n\r\n  CircleText(pos: Vector, radius: number, fontSize: number, rotation: number) {\r\n    const letters = (radius / fontSize) * 4;\r\n    const angle = (Math.PI * 2) / letters;\r\n\r\n    for (let i = 0; i < letters; i++) {\r\n      const curAngle = angle * i + rotation;\r\n      this.NextSymbol(\r\n        pos.add(Vector.fromAngle(curAngle).scale(radius)),\r\n        fontSize,\r\n        curAngle\r\n      );\r\n    }\r\n  }\r\n\r\n  Circle(pos: Vector, radius: number) {\r\n    this.ctx.strokeStyle = this.line;\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(pos.x(), pos.y(), radius, 0, Math.PI * 2);\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  ThreePointArc(initial: Vector, median: Vector, final: Vector) {\r\n    const control = median\r\n      .scale(2)\r\n      .subtract(initial.scale(0.5))\r\n      .subtract(final.scale(0.5));\r\n\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(initial.x(), initial.y());\r\n    this.ctx.quadraticCurveTo(control.x(), control.y(), final.x(), final.y());\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  PolyMidpointArcs(\r\n    pos: Vector,\r\n    radius: number,\r\n    sides: number,\r\n    rotation: number,\r\n    arcRadius: number\r\n  ) {\r\n    this.ctx.strokeStyle = this.line;\r\n    this.ctx.fillStyle = this.background;\r\n\r\n    const angleIncrement = (Math.PI * 2) / sides;\r\n\r\n    for (let vertex = 2; vertex <= sides; vertex += 2) {\r\n      const pointOne = new Vector(\r\n        pos.x() + radius * Math.cos(rotation + angleIncrement * (vertex - 2)),\r\n        pos.y() + radius * Math.sin(rotation + angleIncrement * (vertex - 2))\r\n      );\r\n\r\n      const pointTwo = new Vector(\r\n        pos.x() + radius * Math.cos(rotation + angleIncrement * (vertex - 1)),\r\n        pos.y() + radius * Math.sin(rotation + angleIncrement * (vertex - 1))\r\n      );\r\n\r\n      const pointThree = new Vector(\r\n        pos.x() + radius * Math.cos(rotation + angleIncrement * vertex),\r\n        pos.y() + radius * Math.sin(rotation + angleIncrement * vertex)\r\n      );\r\n\r\n      const arcPointOne = pointTwo.add(\r\n        pointOne\r\n          .subtract(pointTwo)\r\n          .normal()\r\n          .scale(arcRadius)\r\n      );\r\n      const arcPointTwo = pointTwo.add(\r\n        pointThree\r\n          .subtract(pointTwo)\r\n          .normal()\r\n          .scale(arcRadius)\r\n      );\r\n      const arcPointMidpoint = pointTwo.add(\r\n        pos\r\n          .subtract(pointTwo)\r\n          .normal()\r\n          .scale(arcRadius)\r\n      );\r\n\r\n      this.ThreePointArc(arcPointOne, arcPointMidpoint, arcPointTwo);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/transmutation.ts","import { Vector } from \"./vector\";\r\nimport { Random } from \"./random\";\r\nimport { Stroke } from \"./stroke\";\r\n\r\nexport { Glyph };\r\n\r\n/**\r\n * I have found some alphabet dimensions to be ~4 units in height and ~units in\r\n * width\r\n */\r\nclass Glyph {\r\n  private strokes: Array<Stroke>;\r\n\r\n  constructor(private random: Random) {\r\n    do {\r\n      this.strokes = this.generateStrokes(this.random);\r\n    } while (this.validStrokes(this.strokes) == false);\r\n  }\r\n\r\n  private validStrokes(strokes: Array<Stroke>): boolean {\r\n    return strokes.length > 4;\r\n  }\r\n\r\n  private generateStrokes(random: Random): Array<Stroke> {\r\n    const probabilies = [\r\n      [3 / 4, 2 / 3, 3 / 4],\r\n      [2 / 3, 3 / 4, 2 / 3],\r\n      [3 / 4, 2 / 3, 3 / 4]\r\n    ];\r\n\r\n    // Pick random points\r\n    let chosenPoints = new Array<Vector>();\r\n    probabilies.forEach((row, rowIndex) => {\r\n      row.forEach((entry, entryIndex) => {\r\n        if (this.random.nextFloat() > entry) {\r\n          chosenPoints.push(\r\n            new Vector(entryIndex, rowIndex).add(\r\n              Vector.random(this.random).scale(0.2)\r\n            )\r\n          );\r\n        }\r\n      });\r\n    });\r\n\r\n    // Build strokes\r\n    let pointsAdded = new Array<number>();\r\n    let strokes = new Array<Stroke>();\r\n    for (let pointIndex = 0; pointIndex < chosenPoints.length; pointIndex++) {\r\n      for (\r\n        let otherPointsIndex = pointIndex + 1;\r\n        otherPointsIndex < chosenPoints.length;\r\n        otherPointsIndex++\r\n      ) {\r\n        const dist = chosenPoints[pointIndex].dist(\r\n          chosenPoints[otherPointsIndex]\r\n        );\r\n        if (dist > 0.9 && this.random.nextFloat() > dist - 0.5) {\r\n          strokes.push(\r\n            new Stroke(\r\n              chosenPoints[pointIndex].scale(0.5),\r\n              chosenPoints[otherPointsIndex].scale(0.5)\r\n            )\r\n          );\r\n          if (pointsAdded.indexOf(pointIndex) == -1) {\r\n            pointsAdded.push(pointIndex);\r\n          }\r\n          if (pointsAdded.indexOf(otherPointsIndex) == -1) {\r\n            pointsAdded.push(otherPointsIndex);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let pointIndex = 0; pointIndex < chosenPoints.length; pointIndex++) {\r\n      if (\r\n        pointsAdded.indexOf(pointIndex) === -1 &&\r\n        this.random.nextFloat() > 0.8\r\n      ) {\r\n        strokes.push(\r\n          new Stroke(\r\n            chosenPoints[pointIndex].scale(0.5),\r\n            chosenPoints[pointIndex].scale(0.55)\r\n          )\r\n        );\r\n        break;\r\n      }\r\n    }\r\n\r\n    return strokes;\r\n  }\r\n\r\n  Draw(\r\n    ctx: CanvasRenderingContext2D,\r\n    center: Vector,\r\n    dimensions: Vector,\r\n    rotation: number,\r\n    strokeStyle: string\r\n  ) {\r\n    ctx.strokeStyle = strokeStyle;\r\n    this.strokes.forEach(stroke => {\r\n      stroke.Draw(ctx, center, dimensions, rotation);\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/glyph.ts","import { Vector } from \"./vector\";\r\n\r\nexport { Stroke };\r\n\r\n/**\r\n * I have found some alphabet dimensions to be ~4 units in height and ~units in\r\n * width\r\n */\r\nclass Stroke {\r\n  constructor(private start: Vector, private end: Vector) {}\r\n\r\n  public Draw(\r\n    ctx: CanvasRenderingContext2D,\r\n    center: Vector,\r\n    dimensions: Vector,\r\n    rotation: number\r\n  ): void {\r\n    const halfOne = Vector.one().scale(0.5);\r\n    const reAdjust = center.subtract(dimensions.scale(0.5));\r\n\r\n    const startCentered = this.start.subtract(halfOne);\r\n    const originalStartAngle = Math.atan2(startCentered.y(), startCentered.x());\r\n\r\n    let scaledStart = new Vector(\r\n      startCentered.magnitude() * Math.cos(rotation + originalStartAngle),\r\n      startCentered.magnitude() * Math.sin(rotation + originalStartAngle)\r\n    ).add(halfOne);\r\n\r\n    scaledStart = new Vector(\r\n      scaledStart.x() * dimensions.x(),\r\n      scaledStart.y() * dimensions.y()\r\n    ).add(reAdjust);\r\n\r\n    const endCentered = this.end.subtract(halfOne);\r\n    const originalEndAngle = Math.atan2(endCentered.y(), endCentered.x());\r\n\r\n    let scaledEnd = new Vector(\r\n      endCentered.magnitude() * Math.cos(rotation + originalEndAngle),\r\n      endCentered.magnitude() * Math.sin(rotation + originalEndAngle)\r\n    ).add(halfOne);\r\n\r\n    scaledEnd = new Vector(\r\n      scaledEnd.x() * dimensions.x(),\r\n      scaledEnd.y() * dimensions.y()\r\n    ).add(reAdjust);\r\n\r\n    //const temp = ctx.lineWidth;\r\n    //ctx.lineWidth = dimensions.magnitude() / 20;\r\n    ctx.beginPath();\r\n\r\n    ctx.lineTo(scaledStart.x(), scaledStart.y());\r\n    ctx.lineTo(scaledEnd.x(), scaledEnd.y());\r\n    ctx.closePath();\r\n\r\n    ctx.stroke();\r\n    //ctx.lineWidth = temp;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/stroke.ts","export { Alphabet };\r\n\r\nimport { Random } from \"./random\";\r\nimport { Glyph } from \".\";\r\n\r\nconst numberOfLettersInAlphabet = 26;\r\n\r\nclass Alphabet {\r\n  glyphs: any;\r\n\r\n  constructor(random: Random) {\r\n    this.glyphs = {};\r\n    for (\r\n      let currentLetter = 0;\r\n      currentLetter < numberOfLettersInAlphabet;\r\n      currentLetter++\r\n    ) {\r\n      this.glyphs[String.fromCharCode(65 + currentLetter)] = new Glyph(random);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Glyph\r\n   */\r\n  public Glyph(letter: string): Glyph {\r\n    if (letter.toUpperCase() in this.glyphs) {\r\n      return this.glyphs[letter.toUpperCase()];\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/alphabet.ts","export { Random };\r\n\r\nclass Random {\r\n  private seed: number;\r\n\r\n  constructor(seed: number) {\r\n    this.seed = seed % 2147483647;\r\n\r\n    if (this.seed <= 0) {\r\n      this.seed += 2147483646;\r\n    }\r\n  }\r\n\r\n  next(): number {\r\n    return (this.seed = (this.seed * 16807) % 2147483647);\r\n  }\r\n\r\n  nextFloat(): number {\r\n    return (this.next() - 1) / 2147483646;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/random.ts","import { BorderConfig, RandomBorderConfig } from \"./borderconfig\";\r\nimport { Random } from \"./random\";\r\nimport { Alphabet } from \".\";\r\nimport { PolygonConfig, RandomPolygonConfig } from \"./PolygonConfig\";\r\n\r\nexport { Config, RandomConfig };\r\n\r\nclass Config {\r\n  constructor(\r\n    private alphabet: Alphabet,\r\n    private sentence: string,\r\n    private borderConfig: BorderConfig,\r\n    private polgonConfigs: Array<PolygonConfig>,\r\n    private innerBoarderConfig: BorderConfig,\r\n    private innerPolygonConfig: PolygonConfig\r\n  ) {}\r\n\r\n  GetSentence(): string {\r\n    return this.sentence.replace(/\\s+/g, \"\");\r\n  }\r\n\r\n  GetBorderConfig(): BorderConfig {\r\n    return this.borderConfig;\r\n  }\r\n\r\n  GetInnerBoarderConfig(): BorderConfig {\r\n    return this.innerBoarderConfig;\r\n  }\r\n\r\n  GetAlphabet(): Alphabet {\r\n    return this.alphabet;\r\n  }\r\n\r\n  GetPolygonConfigs(): Array<PolygonConfig> {\r\n    return this.polgonConfigs;\r\n  }\r\n\r\n  GetInnerPolygonConfig(): PolygonConfig {\r\n    return this.innerPolygonConfig;\r\n  }\r\n}\r\n\r\nfunction RandomConfig(sentence: string, random: Random): Config {\r\n  const numPolys = 1 + Math.round(random.nextFloat() * 2);\r\n  let polys = new Array<PolygonConfig>(numPolys);\r\n  for (let p = 0; p < numPolys; p++) {\r\n    polys[p] = RandomPolygonConfig(random);\r\n  }\r\n\r\n  return new Config(\r\n    new Alphabet(random),\r\n    sentence,\r\n    RandomBorderConfig(random),\r\n    polys,\r\n    RandomBorderConfig(random),\r\n    random.nextFloat() > 0.5\r\n      ? null\r\n      : new PolygonConfig(\r\n          3 + Math.round(random.nextFloat() * 3),\r\n          random.nextFloat() >= 0.5,\r\n          random.nextFloat() >= 0.5\r\n        )\r\n  );\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.ts"],"sourceRoot":""}